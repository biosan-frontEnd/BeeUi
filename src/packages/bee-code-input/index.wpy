<template>
  <view class="{{ clazz }}">
    <input type="number" placeholder-class="placeholder-class" placeholder="输入验证码" @input="inputCode" @blur="blurCode"/>
    <text class="input-label get-code" wx:if="{{!sendingCode}}" @tap="getCode">获取验证码</text>
    <text class="input-label wait" wx:else >{{sendingCode}}s</text>
  </view>
</template>

<script>
import wepy from 'wepy'
import RequestMixin from 'mixins/request'
export default class Form extends wepy.component {
  mixins = [RequestMixin]
  props = {
    clazz: {
      type: String,
      default: 'input-group bee-code-input'
    },
    sendSmsUrl: {
      type: String,
      require: true
    },
    verifyCodeUrl: {
      type: String,
      require: true
    },
    mobile: {
      type: String,
      require: true
    },
    code: {
      type: String,
      default: '',
      twoWay: true
    },
    beforeGetCode: {
      type: Function,
      default: () => { return true }
    }
  }

  data = {
    sendingCode: false
  }

  sendAnimation() {
    setTimeout(() => {
      if (this.sendingCode > 0) {
        this.sendingCode = this.sendingCode - 1
        this.$apply();
        this.sendAnimation()
      } else {
        this.sendingCode = false
        this.$apply();
      }
    }, 1000)
  }

  async verifyMobile() {
    let resp = await this.POST(this.verifyCodeUrl, {
      isMock: false,
      mobile: this.mobile,
      verifycode: this.code
    })
    return !!(resp.result && resp.result === 'success')
  }

  methods = {
    async getCode() {
      let willGetCode = this.beforeGetCode.call(this.$parent)
      if (willGetCode) {
        this.sendingCode = 60
        this.sendAnimation()
        let resp = await this.POST(this.sendSmsUrl, {
          isMock: false,
          mobile: this.mobile
        })
        let {result, message} = resp;
        if (result !== 'success') {
          this.$toast(message);
        }
      }
    },
    blurCode () {
      this.$emit('blurCode', this.code)
    },
    inputCode(e) {
      this.code = e.detail.value
      this.$emit('inputCode', this.code)
    }
  }

  onLoad() {}
}
</script>

<style lang="less">
  .bee-code-input {
    display: flex;
    justify-content: space-between;
    input[type=number] {
      flex: 1;
      text-align: left;
    }
    text {
      margin-right: 48rpx;
    }
    .get-code {
      color:rgba(49,212,218,1);
    }
    .wait {
      color: #9D9D9D
    }
  }
</style>
